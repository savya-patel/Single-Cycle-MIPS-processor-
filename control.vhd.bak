library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity control is 
    port (opcode: in std_logic_vector(5 downto 0);
	      clk,reset: in std_logic;
			control_instr: out std_logic_vector(31 downto 0));
end control;

architecture behavior of control is 
begin
    process(clk)
    begin 
        if rising_edge(clk) then 
			if reset='1' then
				control_instr<=(others=>'0');
			else 
				case opcode is 
				-- control instr: 0 reg,0 mux1,0 and gate,0 alu control, 0 store data, 0 load data, 0 mux 5, 0 mux3
					when "00000" => control_instr <= "00000000"; --add , J 
					when "00001" => control_instr <= "00000000"; --addi, I
					when "00010" => control_instr <= "00000000"; --beq, I
					when "00011" => control_instr <= "00000000"; --jump, J
					when "00100" => control_instr <= "00000000"; --store, I
					when "00101" => control_instr <= "00000000"; -- load, I
					when others  => control_instr <= "00000000";
				
			end if;
        end if;
    end process;
end behavior;